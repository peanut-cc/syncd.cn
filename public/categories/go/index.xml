<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Go on FAN&#39;S BLOG</title>
    <link>http://example.org/categories/go/</link>
    <description>Recent content in Go on FAN&#39;S BLOG</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 24 Jun 2020 23:48:11 +0800</lastBuildDate>
    
	<atom:link href="http://example.org/categories/go/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>从别人的代码中学习golang系列--01</title>
      <link>http://example.org/study_code_01/</link>
      <pubDate>Wed, 24 Jun 2020 23:48:11 +0800</pubDate>
      
      <guid>http://example.org/study_code_01/</guid>
      <description>​ 自己最近在思考一个问题，如何让自己的代码质量逐渐提高，于是想到整理这个系列，通过阅读别人的代码，从别人的代码中学习，来逐渐提高自己的代码质</description>
    </item>
    
    <item>
      <title>Go单元测试</title>
      <link>http://example.org/go_test/</link>
      <pubDate>Sat, 09 May 2020 01:03:02 +0800</pubDate>
      
      <guid>http://example.org/go_test/</guid>
      <description>Go标准库：testing 提供了单元测试和压力测试 Golang 单元测试要求 用来测试的代码必须以_test.go结尾 单元测试的函数名必须以Test开头(</description>
    </item>
    
    <item>
      <title>开发中的一些规范</title>
      <link>http://example.org/development_standard/</link>
      <pubDate>Wed, 29 Apr 2020 14:10:24 +0800</pubDate>
      
      <guid>http://example.org/development_standard/</guid>
      <description>关于Go开发编码规范 基本要求 项目代码必须通过lint工具的风格检查 必须go fmt 建议使用Go Modules 必须有单元测试 必要的CI 编码风格 Uber Go Style Guide Git 规范 基本</description>
    </item>
    
  </channel>
</rss>