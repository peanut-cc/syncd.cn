<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on FAN&#39;S BLOG</title>
    <link>http://example.org/posts/</link>
    <description>Recent content in Posts on FAN&#39;S BLOG</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 05 Jul 2020 10:38:33 +0800</lastBuildDate>
    
	<atom:link href="http://example.org/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Nmap常见扫描方式流量分析</title>
      <link>http://example.org/nmap_traffic_analysis/</link>
      <pubDate>Sun, 05 Jul 2020 10:38:33 +0800</pubDate>
      
      <guid>http://example.org/nmap_traffic_analysis/</guid>
      <description>环境说明 扫描者：manjaro linux ， IP地址：192.168.31.160 被扫描者：centos 7，IP地址：192.168.31.175 分析</description>
    </item>
    
    <item>
      <title>从别人的代码中学习golang系列--02</title>
      <link>http://example.org/study_code_02/</link>
      <pubDate>Fri, 03 Jul 2020 21:10:32 +0800</pubDate>
      
      <guid>http://example.org/study_code_02/</guid>
      <description>这篇博客还是整理从https://github.com/LyricTian/gin-admin 这个项目中学习的golang相关知识 作者在项目</description>
    </item>
    
    <item>
      <title>从别人的代码中学习golang系列--01</title>
      <link>http://example.org/study_code_01/</link>
      <pubDate>Wed, 24 Jun 2020 23:48:11 +0800</pubDate>
      
      <guid>http://example.org/study_code_01/</guid>
      <description>​ 自己最近在思考一个问题，如何让自己的代码质量逐渐提高，于是想到整理这个系列，通过阅读别人的代码，从别人的代码中学习，来逐渐提高自己的代码质</description>
    </item>
    
    <item>
      <title>算法练习-Reverse-Linked-List</title>
      <link>http://example.org/reverse-linked-list/</link>
      <pubDate>Wed, 20 May 2020 17:49:47 +0800</pubDate>
      
      <guid>http://example.org/reverse-linked-list/</guid>
      <description>起因 今天在刷算法题的时候，碰到了https://leetcode-cn.com/problems/reverse-linked-list/,</description>
    </item>
    
    <item>
      <title>微服务架构</title>
      <link>http://example.org/microservices_note2/</link>
      <pubDate>Sun, 10 May 2020 14:45:27 +0800</pubDate>
      
      <guid>http://example.org/microservices_note2/</guid>
      <description>微服务架构图 从框架层看微服 从程序架构看微服务 注意：微服务与微服务之间不是通过数据耦合的，所以微服与微服务之间都是通过接口调用，一定不是通过数</description>
    </item>
    
    <item>
      <title>Go单元测试</title>
      <link>http://example.org/go_test/</link>
      <pubDate>Sat, 09 May 2020 01:03:02 +0800</pubDate>
      
      <guid>http://example.org/go_test/</guid>
      <description>Go标准库：testing 提供了单元测试和压力测试 Golang 单元测试要求 用来测试的代码必须以_test.go结尾 单元测试的函数名必须以Test开头(</description>
    </item>
    
    <item>
      <title>PostgreSQL学习笔记1--PostgreSQL安装</title>
      <link>http://example.org/postgresql_notes_1/</link>
      <pubDate>Thu, 07 May 2020 23:17:12 +0800</pubDate>
      
      <guid>http://example.org/postgresql_notes_1/</guid>
      <description>环境准备 1 2 [fan@MiWiFi-R1CM-srv ~]$ cat /etc/redhat-release CentOS Linux release 7.3.1611 (Core) 下载安装包 https://www.postgresql.org/ftp/source/ 1 wget https://ftp.postgresql.org/pub/source/v9.6.2/postgresql-9.6.2.tar.gz 安装PostgreSQL 安装依赖包 1 yum -y install coreutils glib2 lrzsz mpstat dstat sysstat e4fsprogs xfsprogs ntp readline-devel zlib-devel openssl-devel pam-devel libxml2-devel libxslt-devel python-devel tcl-devel gcc make smartmontools flex bison perl-devel perl-ExtUtils* openldap-devel</description>
    </item>
    
    <item>
      <title>微服务概述</title>
      <link>http://example.org/microservices_summary/</link>
      <pubDate>Thu, 30 Apr 2020 07:06:58 +0800</pubDate>
      
      <guid>http://example.org/microservices_summary/</guid>
      <description>微服务概述 单体应用 学习微服务之前先看看看传统的单体应用 什么是单体应用 所有的业务功能都在一个应用程序里面 研发人员开发并维护同一个代码库 架构简单</description>
    </item>
    
    <item>
      <title>开发中的一些规范</title>
      <link>http://example.org/development_standard/</link>
      <pubDate>Wed, 29 Apr 2020 14:10:24 +0800</pubDate>
      
      <guid>http://example.org/development_standard/</guid>
      <description>基本要求(Go) 项目代码必须通过lint工具的风格检查 必须go fmt 建议使用Go Modules 必须有单元测试 必要的CI 编码风格 Uber Go Style Guide code commit 原则 代码的comm</description>
    </item>
    
  </channel>
</rss>